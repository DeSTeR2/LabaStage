@model HospitalDomain.Model.Appointment
@using Utils

@{
    ViewData["Title"] = "Create Appointment";
}

<h1>Create Appointment</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Date" class="control-label"></label>
                <input asp-for="Date" class="form-control" id="datePicker" readonly="readonly" value="-- Select date --" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Time" class="control-label"></label>
                <select asp-for="Time" class="form-control" id="timePicker" asp-items="@ViewBag.PossibleTimes">
                    <option value="">-- Select time --</option>
                </select>
                <span asp-validation-for="Time" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Reason" class="control-label"></label>
                <input asp-for="Reason" class="form-control" />
                <span asp-validation-for="Reason" class="text-danger"></span>
            </div>
            <input type="hidden" asp-for="Doctor" value="@ViewBag.DoctorId" />
            @if (CheckRole.IsInRoles(User, new string[] { Constants.Admin, Constants.Manager }))
            {
                <div class="form-group">
                    <label asp-for="Patient" class="control-label"></label>
                    <select asp-for="Patient" class="form-control" asp-items="@ViewBag.Patient"></select>
                </div>
                <div class="form-group">
                    <label asp-for="Room" class="control-label"></label>
                    <select asp-for="Room" class="form-control" asp-items="@ViewBag.Room"></select>
                </div>
            }

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

<style>
    /* Base Datepicker Styles */
    .ui-datepicker {
        font-family: Arial, sans-serif;
        font-size: 16px;
        width: 280px;
        padding: 10px;
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        z-index: 1000 !important;
    }

    /* Header */
    .ui-datepicker-header {
        background-color: #007bff;
        color: white;
        padding: 8px;
        border-radius: 6px 6px 0 0;
        text-align: center;
        position: relative; /* For absolute positioning of buttons */
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .ui-datepicker-title {
        font-weight: bold;
        font-size: 18px;
        flex-grow: 1; /* Center title between buttons */
        text-align: center;
    }

    /* Swap Prev and Next Positions */
    .ui-datepicker-prev {
        order: 1; /* Moves "Previous" to the right */
        cursor: pointer;
        padding: 4px;
        color: white;
        text-decoration: none;
    }

    .ui-datepicker-next {
        order: 2; /* Moves "Next" to the left */
        cursor: pointer;
        padding: 4px;
        color: white;
        text-decoration: none;
    }

        .ui-datepicker-prev:hover,
        .ui-datepicker-next:hover {
            background-color: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
        }

    /* Table Layout */
    .ui-datepicker-calendar {
        width: 100%;
        border-collapse: collapse;
        margin-top: 8px;
    }

        .ui-datepicker-calendar th {
            font-size: 14px;
            color: #666;
            padding: 6px;
            text-align: center;
        }

        .ui-datepicker-calendar td {
            width: 40px;
            height: 40px;
            padding: 0;
            text-align: center;
            vertical-align: middle;
        }

            .ui-datepicker-calendar td a,
            .ui-datepicker-calendar td span {
                display: flex;
                justify-content: center;
                align-items: center;
                width: 100%;
                height: 100%;
                margin: 0;
                padding: 0;
                text-decoration: none;
                color: #333;
                box-sizing: border-box;
                transition: all 0.2s ease;
            }

        /* Possible Dates */
        .ui-datepicker-calendar .possible-date {
            font-size: 16px;
            font-weight: bold;
            background-color: #e0f7fa;
            color: #007bff;
            border-radius: 50%;
        }

            .ui-datepicker-calendar .possible-date:hover {
                background-color: #b3e5fc;
                transform: scale(1.1);
            }

        /* Unpossible Dates */
        .ui-datepicker-calendar .unpossible-date {
            font-size: 16px;
            color: #999;
            background-color: transparent;
        }

            .ui-datepicker-calendar .unpossible-date:hover {
                background-color: #f5f5f5;
            }

        /* Current Day */
        .ui-datepicker-calendar .ui-state-highlight {
            background-color: #fff3e0;
            color: #ff9800;
            border-radius: 50%;
        }

        /* Selected Day */
        .ui-datepicker-calendar .ui-state-active {
            background-color: #007bff;
            color: white !important;
            border-radius: 50%;
        }

    /* Disabled Days */
    .ui-datepicker-unselectable .ui-state-default {
        color: #ccc;
        background-color: #f9f9f9;
        cursor: not-allowed;
    }

</style>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <script>
        $(document).ready(function () {
            // Safely handle ViewBag.PossibleDatesJson
            var possibleDatesJson = '@Html.Raw(ViewBag.PossibleDatesJson ?? "[]")';
            console.log("Raw PossibleDatesJson:", possibleDatesJson);

            var possibleDates;
            try {
                possibleDates = JSON.parse(possibleDatesJson);
            } catch (error) {
                console.error("JSON Parsing Error:", error);
                possibleDates = []; // Fallback to empty array
            }

            var doctorId = @ViewBag.DoctorId ?? 0;
            console.log("Possible Dates:", possibleDates);
            console.log("Doctor ID:", doctorId);

            $("#datePicker").datepicker({
                dateFormat: "yy-mm-dd",
                beforeShowDay: function (date) {
                    var dateStr = $.datepicker.formatDate("yy-mm-dd", date);
                    var isPossible = !(possibleDates.indexOf(dateStr) !== -1);
                    console.log("Date:", dateStr, "Possible:", isPossible);
                    return [isPossible, 'possible-date'];
                },
                minDate: 0,
                maxDate: "+2m",
                onSelect: function (dateText) {
                    console.log("Selected Date:", dateText);
                    $.ajax({
                        url: '@Url.Action("GetPossibleTimesForDoctor", "Appointments")',
                        type: 'GET',
                        data: { doctorId: doctorId, date: dateText },
                        success: function (data) {
                            console.log("Times Received:", data);
                            var $timeSelect = $('#timePicker');
                            $timeSelect.empty().append('<option value="">-- Select time --</option>');
                            $.each(data, function (index, item) {
                                $timeSelect.append($('<option>', {
                                    value: item.value,
                                    text: item.text,
                                    selected: item.value === $('#timePicker').val()
                                }));
                            });
                            $timeSelect.trigger('change');
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching times:", error);
                            $('#timePicker').empty().append('<option value="">Error loading times</option>');
                        }
                    });
                }
            });
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}