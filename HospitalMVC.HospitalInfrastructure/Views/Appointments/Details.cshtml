@model HospitalDomain.Model.Appointment
@using HospitalDomain.Utils  <!-- Ensure the namespace is correct -->
@{
    ViewData["Title"] = "Details";
}

<h1>Details Appointment</h1>

<div>
    <hr />
    <table class="table">
        <tr>
            <th>@Html.DisplayNameFor(model => model.Date)</th>
            <td>@Html.DisplayFor(model => model.Date)</td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Time)</th>
            <td>@Html.DisplayFor(model => model.Time)</td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Reason)</th>
            <td>@Html.DisplayFor(model => model.Reason)</td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.DoctorNavigation)</th>
            <td>@Html.DisplayFor(model => model.DoctorNavigation.Name)</td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.PatientNavigation)</th>
            <td>@Html.DisplayFor(model => model.PatientNavigation.Name)</td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.RoomNavigation)</th>
            <td>@Html.DisplayFor(model => model.RoomNavigation.Type)</td>
        </tr>
        <tr>
            <th>@Html.DisplayNameFor(model => model.AppointmentState)</th>
            @{
                var state = HospitalDomain.Utils.AppointmentStates.States
                .FirstOrDefault(s => s.Item1 == Model.AppointmentState)?.Item2 ?? "Unknown";
                var stateClass = $"state-{state.ToLower()}";
            }
            <td><span class="@stateClass">@state</span></td>
        </tr>
    </table>
</div>

<div>
    <a asp-action="Edit" class="btn btn-primary" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>