// <auto-generated />
using System;
using HospitalDomain.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HospitalDomain.Migrations
{
    [DbContext(typeof(HospitalContext))]
    [Migration("20250313052220_addEmails")]
    partial class addEmails
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HospitalDomain.Model.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int>("Doctor")
                        .HasColumnType("int")
                        .HasColumnName("doctor");

                    b.Property<int>("Patient")
                        .HasColumnType("int")
                        .HasColumnName("patient");

                    b.Property<string>("Reason")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("reason");

                    b.Property<int>("Room")
                        .HasColumnType("int")
                        .HasColumnName("room");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time")
                        .HasColumnName("time");

                    b.HasKey("Id")
                        .HasName("PK__appointm__3213E83FBAFA03D0");

                    b.HasIndex("Doctor");

                    b.HasIndex("Room");

                    b.HasIndex(new[] { "Patient" }, "IX_appointment_patient");

                    b.ToTable("appointment", (string)null);
                });

            modelBuilder.Entity("HospitalDomain.Model.Department", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .IsFixedLength();

                    b.HasKey("Id")
                        .HasName("PK_department_1");

                    b.HasIndex(new[] { "Id" }, "UQ_department_id")
                        .IsUnique();

                    b.ToTable("department", (string)null);
                });

            modelBuilder.Entity("HospitalDomain.Model.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("Department")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .IsFixedLength();

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("char(45)")
                        .IsFixedLength();

                    b.HasKey("Id")
                        .HasName("PK__doctor__3213E83F4AF846E6");

                    b.HasIndex(new[] { "Department" }, "IX_doctor_Department");

                    b.ToTable("doctor", (string)null);
                });

            modelBuilder.Entity("HospitalDomain.Model.Patient", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Contacts")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("contacts");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasPrecision(4)
                        .HasColumnType("datetime2(4)")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("name")
                        .IsFixedLength();

                    b.HasKey("Id")
                        .HasName("PK__patient__3213E83FE0555260");

                    b.ToTable("patient", (string)null);
                });

            modelBuilder.Entity("HospitalDomain.Model.Room", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("capacity");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("PK__room__3213E83F9EB6B491");

                    b.ToTable("room", (string)null);
                });

            modelBuilder.Entity("HospitalDomain.Model.Appointment", b =>
                {
                    b.HasOne("HospitalDomain.Model.Doctor", "DoctorNavigation")
                        .WithMany("Appointments")
                        .HasForeignKey("Doctor")
                        .IsRequired()
                        .HasConstraintName("FK_appointment_doctor");

                    b.HasOne("HospitalDomain.Model.Patient", "PatientNavigation")
                        .WithMany("Appointments")
                        .HasForeignKey("Patient")
                        .IsRequired()
                        .HasConstraintName("FK_appointment_patient");

                    b.HasOne("HospitalDomain.Model.Room", "RoomNavigation")
                        .WithMany("Appointments")
                        .HasForeignKey("Room")
                        .IsRequired()
                        .HasConstraintName("FK_appointment_appointment");

                    b.Navigation("DoctorNavigation");

                    b.Navigation("PatientNavigation");

                    b.Navigation("RoomNavigation");
                });

            modelBuilder.Entity("HospitalDomain.Model.Doctor", b =>
                {
                    b.HasOne("HospitalDomain.Model.Department", "DepartmentNavigation")
                        .WithMany("Doctors")
                        .HasForeignKey("Department")
                        .IsRequired()
                        .HasConstraintName("FK_doctor_department");

                    b.Navigation("DepartmentNavigation");
                });

            modelBuilder.Entity("HospitalDomain.Model.Department", b =>
                {
                    b.Navigation("Doctors");
                });

            modelBuilder.Entity("HospitalDomain.Model.Doctor", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("HospitalDomain.Model.Patient", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("HospitalDomain.Model.Room", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
